/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "matrix.dtsi"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

/ {
    behaviors {
                ht: hold_tap {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <200>;
                    bindings = <&kp>, <&kp>;
                    display-name = "Mod-Tap";
                };
                hml: home_row_mod_left {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "balanced";
                    require-prior-idle-ms = <150>;
                    tapping-term-ms = <280>;
                    quick-tap-ms = <175>;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <KEYS_R THUMBS>; // List of keys on the right side of the keyboard
                    hold-trigger-on-release;
                };
                hmr: home_row_mod_right {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "balanced";
                    require-prior-idle-ms = <150>;
                    tapping-term-ms = <280>;
                    quick-tap-ms = <175>;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <KEYS_L THUMBS>; // List of keys on the left side of the keyboard
                    hold-trigger-on-release;
                };
                lt_repeat: lt_repeat {
                    compatible = "zmk,behavior-hold-tap";
                    label = "LT_REPEAT";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;
                    flavor = "tap-preferred";
                    bindings = <&mo>, <&key_repeat>;
                };
                comma_morph: comma_morph {
                    compatible = "zmk,behavior-mod-morph";
                    #binding-cells = <0>;
                    bindings = <&kp COMMA>, <&kp SEMI>;
                    mods = <(MOD_LSFT|MOD_RSFT)>;
                };
                dot_morph: dot_morph {
                    compatible = "zmk,behavior-mod-morph";
                    #binding-cells = <0>;
                    bindings = <&kp DOT>, <&kp COLON>;
                    mods = <(MOD_LSFT|MOD_RSFT)>;
                };
    };
    keymap {
        compatible = "zmk,keymap";
            default_layer {
                display-name = "Base";
                bindings = <
                //╭───────────┬──────────────┬──────────────┬───────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬───────────────┬──────────────┬──────────────┬───────────╮
                    &kp ESC     &kp Q          &kp W          &kp F           &kp P           &kp B             &kp J           &kp L           &kp U           &kp Y          &kp SQT        &kp MINUS
                //├───────────┼──────────────┼──────────────┼───────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼───────────────┼──────────────┼──────────────┼───────────┤
                    &kp TAB     &hml LCTRL A   &hml LALT R    &hml LGUI S     &hml LSHFT T    &kp G             &kp M           &hmr RSHFT N    &hmr RGUI E     &hmr RALT I    &hmr RCTRL O   &caps_word
                //├───────────┼──────────────┼──────────────┼───────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼───────────────┼──────────────┼──────────────┼───────────┤
                    &kp RET     &kp Z          &kp X          &kp C           &kp D           &kp V             &kp K           &kp H           &comma_morph    &dot_morph     &kp FSLH       &kp RET
                //╰───────────┴──────────────┴──────────────┴───────────────┴───────────────┴───────────────┤ ├───────────────┴───────────────┴───────────────┴──────────────┴──────────────┴───────────╯
                                                              &key_repeat     &kp SPACE       &kp BSPC          &kp BSPC        &kp SPACE       &key_repeat
                //                                          ╰───────────────┴───────────────┴───────────────╯ ╰───────────────┴───────────────┴───────────────╯
                >;
            };
    };
};
